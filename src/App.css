#root {
  max-width: 1280px;
  margin: 0 auto; /* Gives things the proper left/right margins */
  text-align: center;
}

.logo {
  height: 6em;
  width: 6em;
  padding: 1.5em; /* Creates space for the glowy shadow */
  will-change: filter;
  transition: filter 300ms;
}

.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}

.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes slideOutAccel {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(100vw);
    animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
  }
}

@keyframes slideInAccel {
  0% {
    transform: translateX(-100vw);
  }

  100% {
    transform: translateX(0);
    animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
  }
}

.slide-container {
  position: relative;
  width: 100vw; /* Makes the text go across the whole page by default */
  /* These two lines center the contents in the middle of the page */
  left: 50%;
  transform: translateX(-50%);
}

/* A slide-container will sometimes contain 2 pages which must be displayed at the same height. It is thus necessary take them out of the 
document flow using `position: absolute` to ensure that one is not displayed under the other. */
.slide-container>div {
  position: absolute;
  /* Due to absolute positioning, it is necessary to reaffirm that the page takes up the whole space in order for it to properly center */
  width: 100%;
  height: 100%;
  /* These lines center the content within the flex box (which was just defined as the whole page in the two lines above) */
  display: flex;
  align-items: center;
  justify-content: center;
}

.slide-out {
  animation: slideOutAccel 1s forwards;
  z-index: 1;
}

.slide-in {
  animation: slideInAccel 1s forwards;
  z-index: 2;
}

.geographic-button-grid {
  display: flex; /* Activate flexbox */
  flex-direction: row; /* Align items in a row */
  justify-content: space-between; /* Optional: Adjust spacing between buttons */
  align-items: center; /* Centers items vertically within their grid cells */
  width: 100%; /* Ensures the grid spans the full width of its container */
  max-width: 100%; /* Optional: Limits the grid's maximum width */
  margin: 0 auto; /* Centers the grid within its parent container */
}

.geographic-button-grid .image-button {
  width: 100%; /* Ensures buttons take up the full width of their grid cell */
  padding: 1rem; /* Adds padding inside the button */
  border-radius: 8px; /* Rounds the corners of the button */
  /* background-color: #1a1a1a; */
  color: white; /* Sets text color to white */
}

.image-button {
  display: inline-block; /* Ensure buttons behave as inline elements */
  text-align: center; /* Centers text inside the button */
}

.image-button img {
  max-width: 100%; /* Limits the image's maximum width */
  max-height: 100%; /* Limits the image's maximum height */
  object-fit: contain; /* Keeps the image's aspect ratio */
}

.image-button span {
  margin-top: 0.5rem; /* Adds spacing between the image and the text */
  font-size: 1rem; /* Adjusts the font size */
}

/* Main container styles - centers content and provides padding */
.slider-container {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  padding: 2rem;
  max-width: 42rem;
  margin-left: auto;
  margin-right: auto;
}

/* Slider wrapper - provides spacing below the slider */
.slider-wrapper {
  margin-bottom: 2rem;
}

/* Main slider track - creates the base horizontal bar that users interact with */
.slider-track {
  position: relative;
  height: 0.5rem;
  background-color: #d1d5db; /* gray-300 */
  border-radius: 0.5rem;
  cursor: pointer;
  user-select: none;
}

/* Active range highlight - shows the selected range between handles with blue color */
.active-range {
  position: absolute;
  height: 0.5rem;
  background-color: #3b82f6; /* blue-500 */
  border-radius: 0.5rem;
}

.slider-label {
  position: absolute;
  transform: translateX(-50%)
}